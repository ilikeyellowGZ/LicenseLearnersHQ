@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@800;900&family=Varela&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  :root {
      --main-color: #4d4dff;
      --secondary-color: #ff00ff;
      --tertary-color: #fff44f;
      --background-color: #121212 ;
      --text-color: #f8e3e3;
      --second-text-color: #fff ;
      --main-heaing-font: font-family: 'Poppins', sans-serif;
      --main-para-text:font-family: 'Varela', sans-serif;
  }

  html, body {
    background: var(--background-color) ;
    font-family: 'Raleway', sans-serif;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    scroll-behavior: smooth;
    color: var(--second-text-color);
}

/* 
#questionContainer{
    border: 1px solid white;
    width: 70%;
    height: 75%;
    padding: 22px;
}
.questionsWrapper {
    margin-bottom: 8px;
}
.answerContainer {
    margin-top: 8px;
}
.questionsWrapper ,.answerContainer {
    border: 1px solid blue;
    width: 100%;
    height: 50%;
}

.answerWrapper {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    height: 100%;
    width: 100%;
}
.answersHere{
    border: 1px solid red;
    max-width: 100%;
    padding: 8px 16px;
    margin: 8px;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.answersHere:hover {
    transform: scale(1.02);
    max-width: 100%;
}
 */
#question-container {
    height: 100%;
    width: 100%;
    
}


/* body.correct {
  background-color: green;
}

body.wrong {
  background: red;
}
 */
#container {
    border: 1px solid white;
    width: 70%;
    height: 75%;
    padding: 22px;
    position: relative;
}
.questionsBox , .asnwerContainer {
    padding: 24px ;
}
.questionsBox {
    height: 40%;
    max-height: 45%;
    display: flex;
    
}
.asnwerContainer{
    max-height:60% ;
    height: 60%;
    margin-top: 16px;
}
#answer-buttons {
    width: 100%;
    height: 100%;
    display: grid;
    align-items: center;
}
#question {
    text-align: start;
    display: flex;
    border: 1px rgb(255, 255, 255) solid;
    height: 100%;
    width: 100%;
    justify-content: center;
    align-items: center;
    font-weight: 400;
    font-size: 19px;

}

.btn {
    width: 100%;
    height: 80%;
    grid-gap: 4px 0;
    outline: var(--main-color);
    border: none;
    transition: all 0.2s ease-in-out;
    cursor: pointer;
    background: none;
    border: #f8e3e3 1px solid;
    color: #f8e3e3;
    font-family: var(--main-heaing-font);
    font-weight: 900;
    font-size: 17px;
}
.btn:hover {
    border: 3px solid white;
    color: white;
    transform: scale(1.05);
}

/* nextButton.addEventListener("click", () => {
    currentQuestionIndex++;
    setNextQuestion();
  }); */

/* .btn-grid {
    display: grid;
    grid-template-rows: 1fr 1fr 1fr 1fr;
    height: 100%;
    width: 100%;
} */


.btn.correct {
  background: green !important;
  color: white;
}

.btn.wrongs {
 background-color: red;
}


.start-btn,
.next-btn {
  font-size: 1.5rem;
  font-weight: bold;
  padding: 10px 20px;
  cursor: pointer;
  
}

.controls {
  display: flex;
  justify-content: center;
  align-items: center;
}

.hide {
  display: none;
}

.rainbow-border {
animation: rainbow 20s linear 1s infinite ;
}



/* --------timer sections */

.timerContainer {
    max-height: 120px;
    height: 70px;
    width: 100%;
    position: absolute;
    padding: 8px 16px;
    bottom: 0px;
    right: 0px;
   display: flex;
   justify-content: end;
    
}
.timeWrapper {
  
   display: flex;
   justify-content: center;
   height: 100%;
   text-overflow: none;
   word-wrap: break-word;
   justify-content: center;
   width: 200px;
}
.almostFinished {
    animation: timerIsFinishing 1s linear  infinite ;
}

@keyframes timerIsFinishing {
    100%, 0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
}
@keyframes rainbow {
    100% , 0% {
        border: 4px double red;
    }
    10% {
        border: 4px double orange;
    }
    20% {
        border: 4px double yellow;
    }
    30% {
        border: 4px double lime;
    }
    40% {
        border: 4px double turquoise;
    }
    50% {
        border: 4px double blue;
    }
    60% {
        border: 4px double blueviolet;
    }
    70% {
        border: 4px double violet;
    }
    80% {
        border: 4px double pink;
    }
    90% {
        border: 4px double rgb(255, 105, 130);
    }
}




/* im trying to make a line to indicate how much time is really left */
/* if (shuffledQuestions.length + 1 >= questions ) {
    // There are questions remaining
    console.log(`${userScore}/${questions.length}`);
   
  } else {
    // No more questions, display score
    setNextQuestion();
    /* questionContainerElement.innerHTML = `<h2>Your Score: ${userScore}/${questions.length}</h2>`; */
  